#!/bin/bash

echo "­Ъџе CallStatus App т«їтЁесѓ»сЃфсЃ╝сЃ│тєЇУхитІЋ"
echo "======================================"

# 1. тЁесѓ│сЃ│сЃєсЃісЂ«т«їтЁетЂюТГб
echo "1№ИЈРЃБ тЁесѓ│сЃ│сЃєсЃісЂ«т«їтЁетЂюТГб..."
docker-compose down --timeout 5
sleep 2

# 2. сЃЮсЃ╝сЃѕСй┐ућеуіХТ│Ђуб║УфЇсЂет╝итѕХухѓС║є
echo "2№ИЈРЃБ сЃЮсЃ╝сЃѕуФХтљѕУДБТ▒║..."
for port in 3000 3002 5432; do
    if lsof -ti:$port >/dev/null 2>&1; then
        echo "Рџа№ИЈ сЃЮсЃ╝сЃѕ$portсѓњСй┐ућеСИГсЂ«сЃЌсЃГсѓ╗сѓ╣сѓњухѓС║є..."
        lsof -ti:$port | xargs kill -9 2>/dev/null || true
    fi
done

# 3. Docker network cleanup
echo "3№ИЈРЃБ DockerсЃЇсЃЃсЃѕсЃ»сЃ╝сѓ»ТИЁуљє..."
docker network prune -f >/dev/null 2>&1 || true

# 4. сѓ│сЃ│сЃєсЃітєЇУхитІЋ
echo "4№ИЈРЃБ сѓ│сЃ│сЃєсЃіУхитІЋ..."
docker-compose up -d

# 5. сѓ│сЃ│сЃєсЃіУхитІЋтЙЁТЕЪ
echo "5№ИЈРЃБ сѓ│сЃ│сЃєсЃіУхитІЋтЙЁТЕЪ..."
sleep 10

# 6. Prismaсѓ»сЃЕсѓцсѓбсЃ│сЃѕтєЇућЪТѕљ
echo "6№ИЈРЃБ Prismaсѓ»сЃЕсѓцсѓбсЃ│сЃѕтєЇућЪТѕљ..."
docker exec callstatus-app_backend_1 /bin/bash -c "cd /app && npx prisma generate" 2>/dev/null || {
    echo "РЈ│ сѓ│сЃ│сЃєсЃіУхитІЋтЙЁТЕЪСИГ..."
    sleep 5
    docker exec callstatus-app_backend_1 /bin/bash -c "cd /app && npx prisma generate"
}

# 7. сЃљсЃЃсѓ»сѓесЃ│сЃЅУхитІЋ
echo "7№ИЈРЃБ сЃљсЃЃсѓ»сѓесЃ│сЃЅУхитІЋ..."
docker exec callstatus-app_backend_1 /bin/bash -c "cd /app && npm run start:dev > /tmp/backend.log 2>&1 &"

# 8. сЃљсЃЃсѓ»сѓесЃ│сЃЅУхитІЋуб║УфЇ
echo "8№ИЈРЃБ сЃљсЃЃсѓ»сѓесЃ│сЃЅУхитІЋуб║УфЇ..."
for i in {1..20}; do
    if curl -s http://localhost:3002/api/staff >/dev/null 2>&1; then
        echo "РюЁ сЃљсЃЃсѓ»сѓесЃ│сЃЅУхитІЋт«їС║є"
        break
    fi
    echo "РЈ│ сЃљсЃЃсѓ»сѓесЃ│сЃЅтЙЁТЕЪСИГ... ($i/20)"
    sleep 3
done

# 9. сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅУхитІЋ
echo "9№ИЈРЃБ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅУхитІЋ..."
docker exec callstatus-app_frontend_1 /bin/bash -c "cd /app && npm run dev > /tmp/frontend.log 2>&1 &"

# 10. сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅУхитІЋуб║УфЇ
echo "­ЪћЪ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅУхитІЋуб║УфЇ..."
for i in {1..15}; do
    if curl -s -I http://localhost:3000 2>/dev/null | grep -q "200 OK\|Next.js"; then
        echo "РюЁ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅУхитІЋт«їС║є"
        break
    fi
    echo "РЈ│ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅтЙЁТЕЪСИГ... ($i/15)"
    sleep 4
done

# 11. Тюђухѓуб║УфЇ
echo "1№ИЈРЃБ1№ИЈРЃБ сѓисѓ╣сЃєсЃауіХТЁІуб║УфЇ..."
echo "­ЪЊі сѓ│сЃ│сЃєсЃіуіХТЁІ:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "­ЪћЌ APIуб║УфЇ:"
if curl -s http://localhost:3002/api/staff >/dev/null 2>&1; then
    echo "РюЁ сЃљсЃЃсѓ»сѓесЃ│сЃЅAPI: ТГБтИИ"
else
    echo "РЮї сЃљсЃЃсѓ»сѓесЃ│сЃЅAPI: сѓесЃЕсЃ╝"
fi

if curl -s -I http://localhost:3000 2>/dev/null | grep -q "200 OK\|Next.js"; then
    echo "РюЁ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅ: ТГБтИИ"
else
    echo "РЮї сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅ: сѓесЃЕсЃ╝"
fi

echo ""
echo "­ЪјЅ сѓ»сЃфсЃ╝сЃ│тєЇУхитІЋт«їС║є№╝Ђ"
echo "­ЪЊ▒ сѓбсЃЌсЃфсѓ▒сЃ╝сѓисЃДсЃ│: http://localhost:3000"
echo "­ЪћД API: http://localhost:3002/api/"